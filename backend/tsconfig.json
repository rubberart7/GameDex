{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    // "incremental": true, /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    // "composite": true, /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "tsBuildInfoFile": "./.tsbuildinfo", /* Specify the path to .tsbuildinfo incremental compilation file. */
    // "disableSourceOfProjectReferenceRedirect": true, /* Disable preferring source files instead of declaration files when referencing composite projects. */
    // "disableSolutionSearching": true, /* Opt a project out of multi-project reference checking when editing. */
    // "disableReferencedProjectLoad": true, /* Reduce the number of projects loaded automatically by TypeScript. */

    /* Language and Environment */
    "target": "es2016", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    // "lib": [], /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    // "jsx": "preserve", /* Specify what JSX code is generated. */
    // "experimentalDecorators": true, /* Enable experimental support for legacy experimental decorators. */
    // "emitDecoratorMetadata": true, /* Emit design-type metadata for decorated declarations in source files. */
    // "jsxFactory": "", /* Specify the JSX factory function used when targeting React JSX emit. */
    // "jsxFragmentFactory": "", /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit. */
    // "jsxImportSource": "", /* Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'. */
    // "reactNamespace": "", /* Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit. */
    // "noLib": true, /* Disable including any library files, including the default lib.d.ts. */
    // "useDefineForClassFields": true, /* Emit ECMAScript-standard-compliant class fields. */
    // "moduleDetection": "auto", /* Control what method is used to detect module-format JS files. */

    /* Modules */
    "module": "commonjs", /* Specify what module code is generated. */
    "rootDir": "./", /* Specify the root folder within your source files. */
    "moduleResolution": "node10", /* Specify how TypeScript looks up a file from a given module specifier. */
    // "baseUrl": "./", /* Specify the base directory to resolve non-relative module names. */
    // "paths": {}, /* Specify a set of entries that re-map imports to additional lookup locations. */
    // "rootDirs": [], /* Allow multiple folders to be treated as one when resolving modules. */
    // "typeRoots": [], /* Specify multiple folders that act like './node_modules/@types'. */
    // "types": [], /* Specify type package names to be included without being referenced in a source file. */
    // "allowUmdGlobalAccess": true, /* Allow accessing UMD globals from modules. */
    // "resolveJsonModule": true, /* Enable importing .json files. */

    /* Emit */
    // "declaration": true, /* Generate .d.ts files. */
    "outDir": "./dist", /* Specify an output folder for all emitted files. */
    // "removeComments": true, /* Disable emitting comments. */
    // "sourceMap": true, /* Create source map files for emitted JavaScript files. */
    // "inlineSourceMap": true, /* Include sourcemap files inside the emitted JavaScript. */
    // "noEmit": true, /* Disable emitting files from a compilation. */

    /* Interop Constraints */
    "esModuleInterop": true, /* Emit additional JS to ease support for importing CommonJS modules. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
    // "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */
    // "noImplicitReturns": true, /* Enable error reporting for code paths without explicit return. */

    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  }
}
